Fast Auxiliary Space Preconditioning (FASP) Solver Package: README

================================================================================

This software is free software distributed under the Lesser General Public 
License or LGPL, version 3.0 or any later versions. This software distributed 
in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even 
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License 
along with FASP. If not, see <http://www.gnu.org/licenses/>.


================================
0. Introduction
================================

The FASP package is designed for developing and testing new efficient solvers 
and preconditioners for discrete partial differential equations (PDEs) or 
systems of PDEs. The main components of the package are standard Krylov methods, 
algebraic multigrid methods, and incomplete factorization methods. Based on 
these standard techniques, we build efficient solvers, based on the framework 
of Auxiliary Space Preconditioning, for several complicated applications. 
Current examples include the fluid dynamics, underground water simulation, 
the black oil model in reservoir simulation, and so on. 

More details about the FASP project can be found at http://fasp.sourceforge.net.
And, if you have any questions, feel free to contact us at faspdev@gmail.com.

================================
1. Compatibility
================================

To compile, you need a Fortran and a C compiler. By default, we use gfortan 
and gcc, respectively; see Makefile for details. 

This package has been tested with: 

--Linux and Mac
    C/C++:   gcc-4.2, gcc-4.4, gcc-4.5, gcc-4.6, icc-11.x; 
    Fortran: gfortran-4.4, gfortran-4.5, gfortran-4.6, g95-0.92, ifort-11.x.

--Windows XP and Windows Vista
    C/C++:   VC++, icc-11.1.x, icc-12.0.x;
    Fortran: ifort-11.1.x, ifort-12.0.x. 

================================
2. Build
================================

To setup the environment, you need to do two simple steps: 

Step 1. Compile the library: 
     
     [faspsolver/base]$ make

Step 2. Now you can build a few test problems:
     
     [faspsolver/test]$ make

     For helps on building, use:
     
     [faspsolver/test]$ make help 

You may want to adjust the "make.inc" for your personal computer environment or 
choose different compiling parameters, etc. For more details, read the README
files in "base" and "test" directories.  

================================
3. Test Problems
================================
Now you are ready to use the library. If you need to see some test problems, go to 
the "../test" directory for test problems and read the README file therein as well. 
If you wish to see some practical problems where FASP has been applied, see 
"../fasp4*" directories. Each of the directories contains a particular application.

Some simple examples can be found in the "tutorial" directory and step-by-step 
instructions are included in the examples therein.

Please be noted that the codes containing in some of the "../fasp4*" directories 
might be proprietary (not freely available to general public). 

