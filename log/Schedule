# This is schedule for developing FASP

04/01/2010

Chensong: Reconstruct data structures and code. [Done!]

Xiaozhe and Shiquan: Test ILU's. Find the best available ILU code. [Done!]

Ludmil and James: Write energy min interpolation in C.

Xuehai and Zhiyang: Summarize tricks of AMG methods in hypre. 

----------------

04/07/2010

James: MIS with compatible relaxation. [Done!]

James: Add polynomial smoother. [Done!]

Ludmil: Add matrix traspose, addition, multiplication and triple multiplication. [Done!]

----------------

04/22/2010

Chensong: Test new added subroutines. [Done!]

Shuo and Xuehai: MG on structured grids. [Done!]

Xiaozhe and Shiquan: ILU(0) on structured grids. [Done!]

Zhiyang and Chunsheng: mat-vec operations and smoothers on structured grids. [Done!]

Ludmil: Write nested dissection. 

----------------

05/06/2010

James: Add a calling to the new CR coarsening. [Done!]

Ludmil: Further improve sparse triple product. [Done!]

Chensong: Rewrite sprap() to avoid allocation in a big loop. [Done!]

Shiquan: ILU(1) on structured grids. [Done!]

Chensong and Xiaozhe: Make mat-vec in CSR and STR format faster and more cache-aware. [Done!]

----------------

05/13/2010

Shiquan: Add ILUtp. [Done!]

Xiaozhe: Test ILU(1) on structured grids. [Done!]

Xiaozhe: Apply ILU(p) for Monix problems. [Done!]

Xuehai: Assemble and assemble_info need to be tested and cleaned up. [Done!]

----------------

06/17/2010

James: Play with Box AMG. [Done!]

Chensong: Update documents and test problems for reservoir simulations. [Done!]

Chensong: Test UMFPack, CHOLMOD and AMD ordering packages. [Done!]

----------------

07/01/2010

Ludmil: 

1. The coarsening (the public function in coarsening.c) needs to be
    split in 3 steps: [Done!]

    (a) Find corse points and strength matrix S (same algorithm as you
        have now, but just I will separate this part)

    (b) Find the supports of basis functions (or P->IA and
    	P->JA). This is completely separate task, and it uses as input
    	the results from (a).
    
    (c) Find the actual entries and store them in P->val (this is the
    	place you can use any sort of interpolation you can think of).

2. Once 1 is done, it will be easy to add new algorithms for P, which
   in fact is the only thing that defines an AMG (plus a smoother).

James: continue to convert our AMG into C and put it into the MGmatch
       kind of frame so that it is ready to be imported into the FASP. [Done!]

Chensong: testing the new added schemes and compare break-down CPU
	  time. [Done!]

Xiaozhe: have all the possible orderings (such as min degree, nested
	 dissection, lexicographical ordering) implemented.

----------------

09/16/2010

Chensong: Add Fortran test drivers. [Done!]

----------------

10/01/2010

Chensong: Add noncursive multigrid k-cycles. [Done!]

Xiaozhe: Combine aggregation and k-cycles, add line search for correction. [Done!]

James: Add compatible relaxation and Fortran energy min code by Ludmil. [Done!]

James and Xiaozhe: Convert PIMS + distance-2 interpolation to C.  

Kai Yang: Modify the P1 assembling and optimize memory allocation. [Done!]

Cao Fei: Add a new regression test. 

Chensong: Add the matching code. 

----------------

02/23/2011: ANSYS matrices

Ludmil: Add nonrecurive AMLI cycle

Zhiyang: Test ANSYS matrices using Hypre. [Done!]

Chunsheng: Test ANSYS matrices using OpenMP version. [Done!]

Xiaozhe: Test unsmoothed Aggregation AMG with AMLI cycle. [Done!]

Xiaozhe, Yao and James: Modify AMLI cycle, make it can use different coefficient on different levels.

----------------

03/03/2011:

Chensong: Remodel the code and merge OpenMP version with serial version. [Done!]

Ludmil: Add Schwarz method, both additive and multiplicative version. [Done!]

Xiaozhe: Prepare subroutine that generates overlapping blocks. 

----------------

To do: 

* amg_solve: need to add stop_type also
* How to construct Ac as a 7-point stencil using A?
* How to use structured grids for AMG? 

