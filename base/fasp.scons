# Initialize the environment
import os

allenv = Environment(ENV = {'PATH' : os.environ['PATH']})
 
# Set path for FASP header files
allenv.Append(CPPPATH='include')

# Set path for external libraries
allenv.Append(LIBPATH=['/usr/lib', '/usr/local/lib'])

# Set FASP compiling options
BOPT1='-O2 -funroll-loops -ftree-vectorize'
BOPT2='-O0 -Wall -g -pg'

# Our release build is derived from the common build environment...
# ... and set compiler flags for RELEASE version ...
release_env = allenv.Clone()
release_env.Append(CCFLAGS=BOPT1)
release_env.Append(F77FLAGS=BOPT1)
release_env.Append(F90FLAGS=BOPT1)
release_env.Append(F95FLAGS=BOPT1)
release_env.Append(FORTRANFLAGS=BOPT1)
# ... and release builds end up in the "release" dir
release_env.VariantDir('release','src',duplicate=False)
release_env.VariantDir('release/ilu','extra/sparsekit',duplicate=False)
# ... and set source directories for RELEASE version
srcs_release = release_env.Glob('release/*.[cf]')
srcs_release = srcs_release + release_env.Glob('release/ilu/*.f')

# Building target for Release Version
objs_release = release_env.Object(srcs_release)
fasp_release = release_env.Library('release/libfasp', objs_release)

# We define our debug build environment in a similar fashion...
# ... and set compiler flags for DEBUG version ...
debug_env = allenv.Clone()
debug_env.Append(CCFLAGS=BOPT2)
debug_env.Append(F77FLAGS=BOPT2)
debug_env.Append(F90FLAGS=BOPT2)
debug_env.Append(F95FLAGS=BOPT2)
debug_env.Append(FORTRANFLAGS=BOPT2)
# ... and release builds end up in the "debug" dir
debug_env.VariantDir('debug','src',duplicate=False)
debug_env.VariantDir('debug/ilu','extra/sparsekit',duplicate=False)
# ... and set source directories for DEBUG version
srcs_debug = release_env.Glob('debug/*.[cf]')
srcs_debug = srcs_debug + debug_env.Glob('debug/ilu/*.f')

# Building target: Debug Version
objs_debug = debug_env.Object(srcs_debug)
fasp_debug = debug_env.Library('debug/libfaspd', objs_debug)

# Set where to install FASP libfiles
inslib  = release_env.Alias('install-lib', release_env.Install('lib', fasp_release))
inslibd = debug_env.Alias('install-libd', debug_env.Install('lib', fasp_debug))
allenv.Alias('install', [inslib,inslibd])

# Set default target
Default(fasp_release)
